{"version":3,"file":"js/847.8ed469b8.js","mappings":"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","sources":["webpack://teacher-ai/./src/views/components/CourseForm.vue","webpack://teacher-ai/./src/views/components/CourseForm.vue?9fc3","webpack://teacher-ai/./src/api/coursemanage.js","webpack://teacher-ai/./src/views/CourseManageView.vue","webpack://teacher-ai/./src/views/CourseManageView.vue?cbee"],"sourcesContent":["<template>\r\n  <el-dialog\r\n    v-model=\"visible\"\r\n    :title=\"formTitle\"\r\n    width=\"800px\"\r\n  >\r\n    <el-form\r\n      :model=\"form\"\r\n      label-width=\"100px\"\r\n    >\r\n      <!-- 课程图片上传 -->\r\n      <el-form-item label=\"课程封面\">\r\n        <el-upload\r\n          :http-request=\"handleUpload\"\r\n          :before-upload=\"beforeUpload\"\r\n          :show-file-list=\"false\"\r\n          accept=\".jpg,.png\"\r\n        >\r\n          <el-image \r\n            v-if=\"form.image\"\r\n            :src=\"form.image\"\r\n            fit=\"cover\"\r\n            class=\"preview-image\"\r\n          />\r\n          <el-button\r\n            v-else\r\n            type=\"primary\"\r\n          >\r\n            点击上传\r\n          </el-button>\r\n        </el-upload>\r\n      </el-form-item>\r\n\r\n      <!-- 课程基本信息 -->\r\n      <el-form-item\r\n        label=\"课程名称\"\r\n        prop=\"courseName\"\r\n      >\r\n        <el-input v-model=\"form.courseName\" />\r\n      </el-form-item>\r\n      \r\n      <!-- 新增教师选择 -->\r\n      <el-form-item\r\n        label=\"授课教师\"\r\n        prop=\"teacherId\"\r\n      >\r\n        <el-input \r\n          v-model=\"teacherName\"\r\n          disabled\r\n          placeholder=\"当前登录教师\"\r\n        />\r\n      </el-form-item>\r\n      \r\n      <el-form-item\r\n        label=\"课程描述\"\r\n        prop=\"description\"\r\n      >\r\n        <el-input\r\n          v-model=\"form.description\"\r\n          type=\"textarea\"\r\n          rows=\"4\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <!-- 章节管理 -->\r\n      <el-form-item label=\"课程章节\">\r\n        <div\r\n          v-for=\"(chapter, index) in form.chapters\"\r\n          :key=\"index\"\r\n        >\r\n          <el-input \r\n            v-model=\"chapter.chapterName\" \r\n            placeholder=\"章节名称\"\r\n            style=\"width: 200px; margin-right: 10px;\"\r\n          />\r\n          <el-input-number\r\n            v-model=\"chapter.chapterOrder\"\r\n            :min=\"1\"\r\n            controls-position=\"right\"\r\n          />\r\n          <el-button \r\n            type=\"danger\" \r\n            icon=\"el-icon-delete\" \r\n            style=\"margin-left: 10px;\"\r\n            @click=\"removeChapter(index)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </div>\r\n        <el-button\r\n          type=\"primary\"\r\n          @click=\"addChapter\"\r\n        >\r\n          添加章节\r\n        </el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <template #footer>\r\n      <el-button @click=\"visible = false\">\r\n        取消\r\n      </el-button>\r\n      <el-button\r\n        type=\"primary\"\r\n        @click=\"submitForm\"\r\n      >\r\n        提交\r\n      </el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, computed} from 'vue'  // 添加onMounted导入\r\nimport { defineProps, defineEmits } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { uploadCourseImage } from '@/api/course'\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean,\r\n  courseData: Object\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'submit'])\r\n\r\nconst visible = computed({\r\n  get: () => props.modelValue,\r\n  set: (val) => emit('update:modelValue', val)\r\n})\r\nconst teacherName = ref(localStorage.getItem('teacher-info'))\r\nconst teacherId = ref(localStorage.getItem('teacher-id'))\r\n// 表单数据\r\nconst form = ref({\r\n  teacherId: teacherId.value,\r\n  courseName: '',\r\n  description: '',\r\n  image: '',\r\n  chapters: []\r\n})\r\n\r\n// 初始化表单数据\r\nwatch(() => props.courseData, (val) => {\r\n  if (val) {\r\n    form.value = { \r\n      ...val,\r\n      // 修复章节映射逻辑，保留章节ID\r\n      chapters: val.chapters?.map(c => ({\r\n        id: c.id, // 保留章节ID用于更新\r\n        chapterName: c.chapterName,\r\n        chapterOrder: c.chapterOrder\r\n      })) || []\r\n    }\r\n  }\r\n})\r\n\r\n// 表单标题\r\nconst formTitle = computed(() => form.value.id ? '编辑课程' : '新建课程')\r\n\r\n// 章节操作\r\nconst addChapter = () => {\r\n  form.value.chapters.push({\r\n    chapterName: '',\r\n    chapterOrder: form.value.chapters.length + 1\r\n  })\r\n}\r\n\r\nconst removeChapter = (index) => {\r\n  form.value.chapters.splice(index, 1)\r\n}\r\n\r\n// 文件上传处理\r\nconst beforeUpload = (file) => {\r\n  const isImage = ['image/jpeg', 'image/png'].includes(file.type)\r\n  if (!isImage) {\r\n    ElMessage.error('只能上传 JPG/PNG 格式的图片!')\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\n// 替换原有的handleUploadSuccess\r\nconst handleUpload = async (options) => {\r\n  try {\r\n    const res = await uploadCourseImage(options.file, 'teacher-course-image')\r\n    if (res.data.code === 1) {\r\n      form.value.image = res.data.data\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('上传失败')\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst submitForm = () => {\r\n  emit('submit', form.value)\r\n  visible.value = false\r\n  \r\n  // 新增表单重置逻辑\r\n  form.value = {\r\n    teacherId: null,\r\n    courseName: '',\r\n    description: '',\r\n    image: '',\r\n    chapters: []\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./CourseForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CourseForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import service from '@/utils/request'\r\n\r\nexport const getCoursePage = (params) => {\r\n  return service({\r\n    url: '/teacher/courses/page',\r\n    method: 'GET',\r\n    params\r\n  })\r\n}\r\n\r\nexport const deleteCourses = (ids) => {\r\n  return service.delete('/teacher/courses', {\r\n    params: { ids: ids.join(',') },\r\n    paramsSerializer: { indexes: null }\r\n  })\r\n}\r\n\r\nexport const createCourse = (data) => {\r\n  return service({\r\n    url: '/teacher/courses',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n\r\nexport const updateCourse = (data) => {\r\n  return service({\r\n    url: '/teacher/courses',\r\n    method: 'PUT', \r\n    data\r\n  })\r\n}\r\n\r\nexport const getCourseDetail = (courseId) => {\r\n  return service({\r\n    url: `/teacher/courses/${courseId}`,\r\n    method: 'get'\r\n  })\r\n}","<template>\r\n  <div class=\"course-manage\">\r\n    <!-- 操作工具栏 -->\r\n    <div class=\"toolbar\">\r\n      <el-button\r\n        type=\"primary\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        新建课程\r\n      </el-button>\r\n      <el-button\r\n        type=\"danger\"\r\n        @click=\"batchDelete\"\r\n      >\r\n        批量删除\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 课程表格 -->\r\n    <el-table \r\n      v-loading=\"loading\"\r\n      :data=\"courses\"\r\n      border\r\n      stripe\r\n      element-loading-text=\"数据加载中...\"\r\n      empty-text=\"暂无课程数据\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column\r\n        type=\"selection\"\r\n        width=\"55\"\r\n      />\r\n      <el-table-column\r\n        prop=\"courseName\"\r\n        label=\"课程名称\"\r\n      />\r\n      <el-table-column\r\n        prop=\"description\"\r\n        label=\"课程描述\"\r\n      />\r\n      <el-table-column\r\n        label=\"操作\"\r\n        width=\"200\"\r\n      >\r\n        <template #default=\"{row}\">\r\n          <el-button\r\n            size=\"small\"\r\n            @click=\"handleEdit(row)\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(row.id)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页组件 -->\r\n    <el-pagination\r\n      v-model:current-page=\"pageNo\"\r\n      v-model:page-size=\"pageSize\"\r\n      background\r\n      :page-sizes=\"[10, 20, 30]\"\r\n      layout=\"total, sizes, prev, pager, next\"\r\n      :total=\"total\"\r\n    />\r\n\r\n    <!-- 课程表单弹窗 -->\r\n    <course-form \r\n      v-model=\"dialogVisible\"\r\n      :course-data=\"currentCourse\"\r\n      @submit=\"handleSubmit\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'  // 添加ElMessage导入\r\nimport CourseForm from './components/CourseForm.vue'\r\nimport { \r\n  getCoursePage, \r\n  deleteCourses, \r\n  createCourse,\r\n  updateCourse,\r\n  getCourseDetail\r\n} from '@/api/coursemanage'  // 修改引用路径\r\n\r\n// 分页数据\r\nconst pageNo = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst courses = ref([])\r\nconst loading = ref(false)\r\n\r\n// 获取课程列表\r\nconst fetchCourses = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await getCoursePage({\r\n      pageNo: pageNo.value,\r\n      pageSize: pageSize.value\r\n    })\r\n    courses.value = res.data.data.records || []\r\n    total.value = res.data.data.total || 0\r\n  } catch (error) {\r\n    console.error('获取课程列表失败:', error)\r\n    ElMessage.error('数据加载失败')  // 使用导入后的ElMessage\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 监听分页变化\r\nwatch([pageNo, pageSize], fetchCourses)\r\n\r\n// 初始化加载\r\nfetchCourses()\r\n\r\n// 批量操作相关\r\nconst selectedIds = ref([])\r\nconst handleSelectionChange = (selection) => {\r\n  selectedIds.value = selection.map(item => item.id)\r\n}\r\n\r\n// 删除操作\r\nconst handleDelete = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm('确定要删除该课程吗？', '删除确认', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n    await deleteCourses([id])\r\n    ElMessage.success('删除成功')\r\n    fetchCourses()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败：' + error.message)\r\n    }\r\n  }\r\n}\r\n\r\nconst batchDelete = async () => {\r\n  if (selectedIds.value.length === 0) {\r\n    ElMessage.warning('请先选择要删除的课程')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await ElMessageBox.confirm(`确定要删除选中的${selectedIds.value.length}门课程吗？`, '批量删除确认', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n    await deleteCourses(selectedIds.value)\r\n    ElMessage.success('批量删除成功')\r\n    fetchCourses()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败：' + error.message)\r\n    }\r\n  }\r\n}\r\n\r\n// 表单相关\r\nconst dialogVisible = ref(false)\r\nconst currentCourse = ref(null)\r\n\r\n// 监听对话框关闭\r\nwatch(dialogVisible, (val) => {\r\n  if (!val) {\r\n    currentCourse.value = null  // 确保下次打开是新建状态\r\n  }\r\n})\r\n\r\nconst handleCreate = () => {\r\n  currentCourse.value = null\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst handleEdit = async (course) => {\r\n  try {\r\n    const res = await getCourseDetail(course.id)\r\n    currentCourse.value = {\r\n      ...res.data.data,\r\n      chapters: res.data.data.chapters // 直接使用接口返回的chapters字段\r\n    }\r\n    dialogVisible.value = true\r\n  } catch (error) {\r\n    ElMessage.error('获取课程详情失败')\r\n  }\r\n}\r\n\r\nconst handleSubmit = async (formData) => {\r\n  try {\r\n    if (formData.id) {\r\n      await updateCourse({\r\n        ...formData,\r\n        image: formData.image,\r\n        chapterList: formData.chapters // 确保字段名与后端一致\r\n      })\r\n    } else {\r\n      await createCourse({\r\n        ...formData,\r\n        image: formData.image // 新建时包含图片字段\r\n      }) \r\n    }\r\n    fetchCourses()\r\n  } catch (error) {\r\n    console.error('提交失败:', error)\r\n  }\r\n}\r\n</script>","import script from \"./CourseManageView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CourseManageView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["props","__props","emit","__emit","visible","computed","get","modelValue","set","val","teacherName","ref","localStorage","getItem","teacherId","form","value","courseName","description","image","chapters","watch","courseData","map","c","id","chapterName","chapterOrder","formTitle","addChapter","push","length","removeChapter","index","splice","beforeUpload","file","isImage","includes","type","ElMessage","error","handleUpload","async","res","uploadCourseImage","options","data","code","submitForm","__exports__","getCoursePage","params","service","url","method","deleteCourses","ids","delete","join","paramsSerializer","indexes","createCourse","updateCourse","getCourseDetail","courseId","pageNo","pageSize","total","courses","loading","fetchCourses","records","console","selectedIds","handleSelectionChange","selection","item","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","success","message","batchDelete","warning","dialogVisible","currentCourse","handleCreate","handleEdit","course","handleSubmit","formData","chapterList"],"sourceRoot":""}