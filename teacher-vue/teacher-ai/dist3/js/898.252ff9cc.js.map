{"version":3,"file":"js/898.252ff9cc.js","mappings":"8jBA0EA,MAAMA,GAASC,EAAAA,EAAAA,MAMTC,GAAQC,EAAAA,EAAAA,MACRC,GAAeC,EAAAA,EAAAA,IAAI,IACnBC,GAAWC,EAAAA,EAAAA,IAAS,IACpBC,GAAaH,EAAAA,EAAAA,KAAI,GACjBI,GAAuBJ,EAAAA,EAAAA,KAAI,GAC3BK,GAAaL,EAAAA,EAAAA,IAAI,MAEjBM,EAAiBA,KACjBD,EAAWE,QACbF,EAAWE,MAAMC,UAAYH,EAAWE,MAAME,aAChD,EAGIC,EAAcC,UAClB,IAAKC,EAAQL,MAAO,OACpB,IAAKR,EAAaQ,MAAMM,OAAQ,OAEhC,MAAMC,EAAWf,EAAaQ,MACxBQ,EAAQC,KAAKC,MAEnBhB,EAASiB,KAAK,CACZC,GAAIJ,EACJK,QAASN,EACTO,SAAU,iBAGNC,EAAAA,EAAAA,MACNhB,IAEAP,EAAaQ,MAAQ,GACrBJ,EAAWI,OAAQ,EAEnB,IACE,MAAMgB,QAAYC,EAAAA,EAAAA,IAAS,CACzBC,OAAQX,EACRY,OAAQC,OAAOC,aAAaC,QAAQ,eACpCC,SAAUH,OAAO9B,EAAMkC,OAAOD,UAC9BE,UAAWL,OAAO9B,EAAMkC,OAAOC,YAC9B,CACDC,QAAS,MAGX,GAAuB,IAAnBV,EAAIW,MAAMC,KAAY,CACxB,MAAMC,EAAMnC,EAASoC,MAAKC,GAAKA,EAAEnB,KAAOJ,IACxC,GAAIqB,EAAK,CAEP,MAAMG,EAAehB,EAAIW,KAAKA,MAAQ,CAAC,EACvCE,EAAIf,SAAWkB,EAAalB,UAAY,GACxCe,EAAII,KAAOD,EAAaC,KACxBJ,EAAItB,SAAWyB,EAAazB,SAC5BsB,EAAIK,WAAaF,EAAaE,WAE9BrC,EAAqBG,MAAQ6B,EAAII,WAC3BlB,EAAAA,EAAAA,MACNhB,IAEI8B,EAAII,OACJE,EAAAA,EAAAA,GAAqB,CACjBhB,OAAQC,OAAOC,aAAaC,QAAQ,eACpCC,SAAUH,OAAO9B,EAAMkC,OAAOD,UAC9BE,UAAWL,OAAO9B,EAAMkC,OAAOC,WAC/BW,KAAMhB,OAAO,IAGvB,MACEiB,EAAAA,EAAaC,QACX,oBAAsBtB,EAAIW,MAAMY,SAAW,QAAU,WACrD,QACA,CACEC,kBAAmB,OACnBC,iBAAkB,KAClBC,KAAM,UAENC,MAAK,KACLC,SAASC,QAAQ,GAIzB,CACF,CAAE,MAAOC,GACPC,EAAAA,GAAUD,MAAM,SAAWA,EAAMP,QACnC,CAAE,QACA3C,EAAWI,OAAQ,CACrB,GAIIK,GAAU2C,EAAAA,EAAAA,KAAS,KAAOpD,EAAWI,QAG3CiD,EAAAA,GAAOC,WAAW,CAChBC,UAAWvB,GAAQwB,EAAAA,EAAKC,cAAczB,GAAM5B,MAC5CsD,QAAQ,IAEV,MAAMC,EAAiB1C,IAAWoC,EAAAA,EAAAA,IAAOpC,GAAW,IAI9C2C,EAAmBA,KACvB,MAAMC,EAAU/D,EAASA,EAASgE,OAAS,GAC3CtE,EAAOuB,KAAK,CACVgD,KAAM,iBACNnC,OAAQ,CACND,SAAUjC,EAAMkC,OAAOD,SACvBE,UAAWnC,EAAMkC,OAAOC,WAE1BmC,MAAO,CACLrD,SAAUkD,EAAQlD,SAClBY,OAAQC,OAAOC,aAAaC,QAAQ,eACpCY,WAAYuB,EAAQvB,aAEtB,E,gxDCzLJ,MAAM2B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://teacher-ai/./src/views/AskView.vue","webpack://teacher-ai/./src/views/AskView.vue?d8a1"],"sourcesContent":["<template>\r\n  <div class=\"ask-container\">\r\n    \r\n    <el-card v-if=\"messages.length === 0\" class=\"welcome-card\">\r\n      <div class=\"welcome-text\">üéâ Ê¨¢ËøéËøõÂÖ•Êú¨Á´†ËäÇÁöÑÂ≠¶‰π†ÔºÅÔºÅÔºÅ</div>\r\n      <div class=\"tip-text\">ËØ∑Âú®‰∏ãÊñπÁöÑËæìÂÖ•Ê°Ü‰∏≠ÊèêÂá∫ÊÇ®ÁöÑÈóÆÈ¢òÔºåÊàëÂ∞Ü‰∏∫ÊÇ®Êèê‰æõ‰∏ì‰∏öÁöÑËß£Á≠î</div>\r\n    </el-card>\r\n\r\n    <!-- ÂØπËØùÂéÜÂè≤Âå∫ -->\r\n    <div ref=\"messageBox\" class=\"message-list\">\r\n      <div v-for=\"(msg, index) in messages\" :key=\"index\" class=\"message-item\">\r\n        <!-- Áî®Êà∑ÊèêÈóÆ -->\r\n        <div class=\"user-message\">\r\n          <el-icon class=\"avatar\"><User /></el-icon>\r\n          <div class=\"content-box\">\r\n            <div class=\"message-content\">{{ msg.content }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- AIÂõûÂ§ç -->\r\n        <el-card class=\"ai-response\">\r\n          <div class=\"response-content\" v-html=\"renderMarkdown(msg.response)\"></div>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ËæìÂÖ•Âå∫ -->\r\n    <div class=\"input-area\" v-if=\"!showMultiModelButton\">\r\n      <div class=\"input-wrapper\">\r\n        <el-input\r\n          v-model=\"inputMessage\"\r\n          type=\"textarea\"\r\n          :rows=\"3\"\r\n          placeholder=\"ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...\"\r\n          resize=\"none\"\r\n          @keyup.enter=\"sendMessage\"\r\n        />\r\n        <el-button \r\n          type=\"primary\" \r\n          :disabled=\"!canSend\" \r\n          class=\"send-btn\"\r\n          @click=\"sendMessage\">\r\n          <el-icon class=\"send-icon\"><Promotion /></el-icon>\r\n          ÂèëÈÄÅÊèêÈóÆ\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Â§öÊ®°ÂûãÂõûÁ≠îÂå∫ -->\r\n    <div class=\"multi-model-area\" v-else>\r\n      <el-button \r\n        type=\"success\"\r\n        class=\"multi-btn\"\r\n        @click=\"handleMultiModel\">\r\n        <el-icon><MagicStick /></el-icon>\r\n        Â§öÊ®°ÂûãÊ∑±Â∫¶Ëß£Êûê\r\n      </el-button>\r\n      <div class=\"tip-text\">\r\n        <el-icon><InfoFilled /></el-icon>\r\n        Â∑≤‰∏∫ÊÇ®ÂåπÈÖçÊúÄ‰Ω≥Ëß£Á≠îÊñπÊ°àÔºåÁÇπÂáªÊåâÈíÆÊü•ÁúãÂ§öÊ®°ÂûãÂØπÊØîÂàÜÊûê\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, nextTick } from 'vue'  // ‰øÆÊ≠£ÂØºÂÖ•È°π\r\n// Âú®script setupÈÉ®ÂàÜÊ∑ªÂä†\r\nimport { Promotion, MagicStick, InfoFilled } from '@element-plus/icons-vue'\r\n\r\n// Âú®script setupÈÉ®ÂàÜÊ∑ªÂä†\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { updateProgressStatus } from '@/api/progress'\r\n\r\nconst router = useRouter()\r\nimport { ElMessage,ElMessageBox } from 'element-plus' // Êñ∞Â¢ûÊ∂àÊÅØÊèêÁ§∫ÁªÑ‰ª∂\r\nimport { marked } from 'marked' // Êñ∞Â¢ûmarkdownËß£ÊûêÂô®\r\nimport hljs from 'highlight.js' // Êñ∞Â¢û‰ª£Á†ÅÈ´ò‰∫ÆÂ∫ì\r\nimport { postChat } from '@/api/askyou' // Á°Æ‰øùÊé•Âè£Â∑≤ÂØºÂÖ•\r\n\r\nconst route = useRoute()\r\nconst inputMessage = ref('')\r\nconst messages = reactive([])\r\nconst isChatting = ref(false)\r\nconst showMultiModelButton = ref(false)  // Êñ∞Â¢ûÂìçÂ∫îÂºèÁä∂ÊÄÅ\r\nconst messageBox = ref(null)\r\n\r\nconst scrollToBottom = () => {\r\n  if (messageBox.value) {\r\n    messageBox.value.scrollTop = messageBox.value.scrollHeight\r\n  }\r\n}\r\n\r\nconst sendMessage = async () => {\r\n  if (!canSend.value) return // ‰ΩøÁî®computedÂ±ûÊÄßÊ†°È™å\r\n  if (!inputMessage.value.trim()) return\r\n  \r\n  const question = inputMessage.value\r\n  const msgId = Date.now()\r\n  \r\n  messages.push({\r\n    id: msgId,\r\n    content: question,\r\n    response: 'ÊÄùËÄÉ‰∏≠...'\r\n  })\r\n  \r\n  await nextTick()\r\n  scrollToBottom()\r\n  \r\n  inputMessage.value = ''\r\n  isChatting.value = true\r\n\r\n  try {\r\n    const res = await postChat({\r\n      prompt: question,\r\n      userId: Number(localStorage.getItem('student-id')),\r\n      courseId: Number(route.params.courseId),\r\n      chapterId: Number(route.params.chapterId)\r\n    }, {\r\n      timeout: 300000  // Êñ∞Â¢ûË∂ÖÊó∂ÈÖçÁΩÆÔºà120ÁßíÔºâ\r\n    })\r\n    \r\n    if (res.data?.code === 1) {\r\n      const msg = messages.find(m => m.id === msgId)\r\n      if (msg) {\r\n        // ‰øÆÊîπÂìçÂ∫îÂ§ÑÁêÜÈÄªËæë\r\n        const responseData = res.data.data || {}\r\n        msg.response = responseData.response || ''\r\n        msg.flag = responseData.flag  // Êñ∞Â¢ûflagÁä∂ÊÄÅÂ≠òÂÇ®\r\n        msg.question = responseData.question  // Â≠òÂÇ®ÈóÆÈ¢ò\r\n        msg.questionId = responseData.questionId  // Â≠òÂÇ®ÈóÆÈ¢òID\r\n        \r\n        showMultiModelButton.value = msg.flag  // ‰øÆÊîπ‰∏∫Áõ¥Êé•‰ΩøÁî®flagÂ≠óÊÆµ\r\n        await nextTick()\r\n        scrollToBottom()  // ÂìçÂ∫îÂêéÂÜçÊ¨°ÊªöÂä®\r\n         // Âú®ÊòæÁ§∫Â§öÊ®°ÂûãÊåâÈíÆÊó∂Êõ¥Êñ∞ËøõÂ∫¶Ôºàstep 1Ôºâ\r\n        if (msg.flag) {\r\n            updateProgressStatus({\r\n                userId: Number(localStorage.getItem('student-id')),\r\n                courseId: Number(route.params.courseId),\r\n                chapterId: Number(route.params.chapterId),\r\n                step: Number(1)\r\n            })\r\n        }\r\n      }else{\r\n        ElMessageBox.confirm(\r\n          'Â§ßÊ®°ÂûãÊúçÂä°ËøûÊé•ÂºÇÂ∏∏ÔºåÈîôËØØ‰ø°ÊÅØ: ' + (res.data?.message || 'Êú™Áü•ÈîôËØØ') + 'ÔºåËØ∑Âà∑Êñ∞È°µÈù¢ÈáçËØï',\r\n          'ÊúçÂä°‰∏çÂèØÁî®',\r\n          {\r\n            confirmButtonText: 'Á´ãÂç≥Âà∑Êñ∞',\r\n            cancelButtonText: 'ÂèñÊ∂à',\r\n            type: 'error'\r\n          }\r\n          ).then(() => {\r\n            location.reload()\r\n          })\r\n      }\r\n     \r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('ËØ∑Ê±ÇÂ§±Ë¥•: ' + error.message)\r\n  } finally {\r\n    isChatting.value = false\r\n  }\r\n}\r\n\r\n\r\nconst canSend = computed(() => !isChatting.value)  // ‰øùÊåÅËÆ°ÁÆóÂ±ûÊÄßÂÆö‰πâ\r\n\r\n// MarkdownÈÖçÁΩÆÔºàÂ§çÁî®‰πãÂâçËÆæÁΩÆÔºâ\r\nmarked.setOptions({  // Á°Æ‰øùmarkedÂ∑≤Ë¢´ÂÆö‰πâ\r\n  highlight: code => hljs.highlightAuto(code).value,\r\n  breaks: true\r\n})\r\nconst renderMarkdown = content => marked(content || '')\r\n\r\n\r\n// ‰øÆÊîπÂêéÁöÑhandleMultiModelÊñπÊ≥ï\r\nconst handleMultiModel = () => {\r\n  const lastMsg = messages[messages.length - 1]\r\n  router.push({\r\n    name: 'chapter-detail',\r\n    params: {\r\n      courseId: route.params.courseId,\r\n      chapterId: route.params.chapterId\r\n    },\r\n    query: {  // ÊîπÁî®queryÂèÇÊï∞‰º†ÈÄí\r\n      question: lastMsg.question,\r\n      userId: Number(localStorage.getItem('student-id')),\r\n      questionId: lastMsg.questionId\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Êñ∞Â¢ûÊåâÈíÆÊ†∑Âºè */\r\n.back-btn {\r\n  margin-bottom: 20px;\r\n  padding: 10px 20px;\r\n  border-radius: 18px;\r\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.2);\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.back-btn:hover {\r\n  transform: translateY(-2px);\r\n} \r\n\r\n.welcome-card {\r\n  margin-top: 30px;  /* Ë∞ÉÊï¥Èó¥Ë∑ù */\r\n}\r\n\r\n.welcome-text {\r\n  font-size: 24px;\r\n  color: #409eff;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.tip-text {\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n/* ‰ºòÂåñÊ¨¢ËøéÂç°ÁâáÈó¥Ë∑ù */\r\n.welcome-card {\r\n  margin-bottom: 15px;  /* Âéü30pxÊîπ‰∏∫15px */\r\n}\r\n\r\n/* Ë∞ÉÊï¥ËæìÂÖ•Âå∫ÂÆö‰Ωç */\r\n.input-area {\r\n  position: sticky;\r\n  bottom: 0;\r\n  background: white;\r\n  z-index: 10;\r\n  box-shadow: 0 -2px 12px rgba(0,0,0,0.05);\r\n  padding: 15px 0;\r\n}\r\n\r\n/* Áº©Â∞èÊ∂àÊÅØÂàóË°®È´òÂ∫¶ */\r\n.message-list {\r\n  height: 65vh;  /* Âéü70vhÊîπ‰∏∫65vh */\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.send-btn {\r\n  width: 120px;\r\n  height: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.send-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* ‰ºòÂåñÂ§öÊ®°ÂûãÂå∫Âüü */\r\n.multi-model-area {\r\n  text-align: center;\r\n  padding: 30px;\r\n  background: #f8fafb;\r\n  border-radius: 8px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.multi-btn {\r\n  padding: 15px 40px;\r\n  font-size: 16px;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.multi-btn:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.multi-btn .el-icon {\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.tip-text .el-icon {\r\n  color: #409eff;\r\n  margin-right: 8px;\r\n}\r\n/* Â§çÁî®ChapterDetailViewÁöÑÊ†∑Âºè */\r\n.ask-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.input-area {\r\n  position: sticky;\r\n  bottom: 0;\r\n  background: white;\r\n  padding: 20px 0;\r\n  box-shadow: 0 -4px 12px rgba(0,0,0,0.08);\r\n  z-index: 10;\r\n}\r\n\r\n.ai-response {\r\n  margin-top: 10px;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.message-list {\r\n  height: 60vh;  \r\n  margin-bottom: 10px; \r\n}\r\n\r\n.input-area {\r\n  position: relative; \r\n  margin-top: 0;     \r\n  box-shadow: none;   \r\n  padding: 10px 20px;  \r\n}\r\n\r\n.multi-model-area {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.multi-btn {\r\n  padding: 15px 40px;\r\n}\r\n\r\n.tip-text {\r\n  color: #666;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n","import script from \"./AskView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AskView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AskView.vue?vue&type=style&index=0&id=109fec6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-109fec6a\"]])\n\nexport default __exports__"],"names":["router","useRouter","route","useRoute","inputMessage","ref","messages","reactive","isChatting","showMultiModelButton","messageBox","scrollToBottom","value","scrollTop","scrollHeight","sendMessage","async","canSend","trim","question","msgId","Date","now","push","id","content","response","nextTick","res","postChat","prompt","userId","Number","localStorage","getItem","courseId","params","chapterId","timeout","data","code","msg","find","m","responseData","flag","questionId","updateProgressStatus","step","ElMessageBox","confirm","message","confirmButtonText","cancelButtonText","type","then","location","reload","error","ElMessage","computed","marked","setOptions","highlight","hljs","highlightAuto","breaks","renderMarkdown","handleMultiModel","lastMsg","length","name","query","__exports__"],"sourceRoot":""}