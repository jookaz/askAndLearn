{"version":3,"file":"js/883.4613547d.js","mappings":"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","sources":["webpack://teacher-ai/./src/views/SystemModelManageView.vue","webpack://teacher-ai/./src/views/SystemModelManageView.vue?3d88","webpack://teacher-ai/./src/api/admin.js"],"sourcesContent":["<template>\r\n  <div class=\"model-manage-container\">\r\n    <!-- 操作工具栏 -->\r\n    <div class=\"operation-bar\">\r\n      <el-button type=\"primary\" @click=\"openCreateDialog\">新建模型</el-button>\r\n      <el-button type=\"danger\" @click=\"batchDelete\">批量删除</el-button>\r\n    </div>\r\n\r\n    <!-- 模型表格 -->\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"modelList\"\r\n      border\r\n      highlight-current-row\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n      <el-table-column prop=\"modelName\" label=\"模型名称\" min-width=\"120\" />\r\n      <el-table-column prop=\"baseUrl\" label=\"API地址\" min-width=\"200\" />\r\n      <!-- 新增系统模型状态列 -->\r\n      <el-table-column label=\"系统模型\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          {{ row.systemFlag === 1 ? '是' : '否' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"250\">\r\n        <template #default=\"{ row }\">\r\n          <el-button size=\"small\" @click=\"openEditDialog(row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(row.id)\">删除</el-button>\r\n          <!-- 新增设置系统模型按钮 -->\r\n          <el-button \r\n            size=\"small\" \r\n            :type=\"row.systemFlag === 1 ? 'warning' : 'success'\"\r\n            @click=\"handleSetSystemModel(row)\"\r\n          >\r\n            {{ row.systemFlag === 1 ? '系统模型' : '设为系统模型' }}\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页组件 -->\r\n    <el-pagination\r\n      v-model:current-page=\"pagination.page\"\r\n      v-model:page-size=\"pagination.size\"\r\n      :total=\"pagination.total\"\r\n      :page-sizes=\"[10, 20, 30]\"\r\n      layout=\"total, sizes, prev, pager, next\"\r\n      class=\"pagination-wrapper\"\r\n    />\r\n\r\n    <!-- 模型配置弹窗 -->\r\n    <el-dialog v-model=\"dialog.visible\" :title=\"dialog.title\">\r\n      <el-form :model=\"formData\" label-width=\"100px\">\r\n        <el-form-item label=\"模型名称\" required>\r\n          <el-input v-model=\"formData.modelName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"API地址\" required>\r\n          <el-input v-model=\"formData.baseUrl\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"API密钥\">\r\n          <el-input v-model=\"formData.apiKey\" type=\"password\" show-password />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"dialog.visible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确认</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport {\r\n  getModelPage,\r\n  deleteModels,\r\n  createModel,\r\n  updateModel,\r\n  getModelDetail,\r\n  setSystemModel // 需要添加新的API方法\r\n} from '@/api/admin'\r\n\r\n// 新增设置系统模型处理方法\r\nconst handleSetSystemModel = async (row) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确认${row.systemFlag === 1 ? '取消' : '设置'}该系统模型？`,\r\n      '操作确认', \r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    const { data } = await setSystemModel(row.id)\r\n    if (data.code === 1) {\r\n      ElMessage.success('操作成功')\r\n      // 刷新列表或局部更新数据\r\n      fetchModels()\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error(error.response?.data?.message || '操作失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页数据\r\nconst pagination = reactive({\r\n  page: 1,\r\n  size: 10,\r\n  total: 0\r\n})\r\n\r\n// 模型数据\r\nconst modelList = ref([])\r\nconst loading = ref(false)\r\nconst selectedIds = ref([])\r\n\r\n// 弹窗控制\r\nconst dialog = reactive({\r\n  visible: false,\r\n  title: '新建模型',\r\n  isEdit: false\r\n})\r\n\r\n// 表单数据\r\nconst formData = reactive({\r\n  id: null,\r\n  modelName: '',\r\n  baseUrl: '',\r\n  apiKey: ''\r\n})\r\n\r\n// 获取模型列表\r\nconst fetchModels = async () => {\r\n  loading.value = true\r\n  try {\r\n    const { data } = await getModelPage({\r\n      pageNo: pagination.page,\r\n      pageSize: pagination.size\r\n    })\r\n    \r\n    if (data.code === 1) {\r\n      modelList.value = data.data.records\r\n      pagination.total = data.data.total\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.response?.data?.message || '数据加载失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 批量选择\r\nconst handleSelectionChange = (selection) => {\r\n  selectedIds.value = selection.map(item => item.id)\r\n}\r\n\r\n// 删除单个\r\nconst handleDelete = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm('确定删除该模型？', '删除确认', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n    await deleteModels([id])\r\n    ElMessage.success('删除成功')\r\n    fetchModels()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败：' + error.message)\r\n    }\r\n  }\r\n}\r\n\r\n// 批量删除\r\nconst batchDelete = async () => {\r\n  if (selectedIds.value.length === 0) {\r\n    ElMessage.warning('请选择要删除的模型')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await ElMessageBox.confirm(`确认删除选中的${selectedIds.value.length}个模型？`, '批量删除', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n    await deleteModels(selectedIds.value)\r\n    ElMessage.success('批量删除成功')\r\n    fetchModels()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败：' + error.message)\r\n    }\r\n  }\r\n}\r\n// 打开创建弹窗\r\nconst openCreateDialog = () => {\r\n  Object.assign(formData, {\r\n    id: null,\r\n    modelName: '',\r\n    baseUrl: '',\r\n    apiKey: ''\r\n  })\r\n  dialog.title = '新建模型'\r\n  dialog.isEdit = false\r\n  dialog.visible = true\r\n}\r\n\r\n// 打开编辑弹窗\r\nconst openEditDialog = async (row) => {\r\n  try {\r\n    const { data } = await getModelDetail(row.id)\r\n    if (data.code === 1) {\r\n      Object.assign(formData, data.data)\r\n      dialog.title = '编辑模型'\r\n      dialog.isEdit = true\r\n      dialog.visible = true\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.response?.data?.message || '获取详情失败')\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst submitForm = async () => {\r\n  try {\r\n    let res\r\n    if (dialog.isEdit) {\r\n      res = await updateModel(formData)\r\n    } else {\r\n      res = await createModel(formData)\r\n    }\r\n\r\n    if (res.data.code === 1) {\r\n      ElMessage.success(dialog.isEdit ? '更新成功' : '创建成功')\r\n      dialog.visible = false\r\n      fetchModels()\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.response?.data?.message || '操作失败')\r\n  }\r\n}\r\n\r\n// 初始化加载\r\nonMounted(fetchModels)\r\n</script>\r\n\r\n<style scoped>\r\n.model-manage-container {\r\n  padding: 20px;\r\n}\r\n.operation-bar {\r\n  margin-bottom: 20px;\r\n}\r\n.pagination-wrapper {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n</style>","import script from \"./SystemModelManageView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SystemModelManageView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SystemModelManageView.vue?vue&type=style&index=0&id=cfaf4476&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cfaf4476\"]])\n\nexport default __exports__","import request from '@/utils/request'\r\n\r\nexport const getModelPage = (params) => {\r\n  return request({\r\n    url: '/admin/model',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport const deleteModels = (ids) =>\r\n  request.delete('/admin/model', {\r\n    params: { ids },\r\n    paramsSerializer: {\r\n      indexes: null // 禁用数组索引格式\r\n    }\r\n  })\r\n\r\nexport const createModel = (data) => {\r\n  return request({\r\n    url: '/admin/model',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport const updateModel = (data) => {\r\n  return request({\r\n    url: '/admin/model',\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\nexport const getModelDetail = (id) => {\r\n  return request({\r\n    url: `/admin/model/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\nexport const setSystemModel = (modelId) => {\r\n  return request({\r\n    url: `/admin/model/setSystemModel`,\r\n    method: 'put',\r\n    params: { modelId }\r\n  })\r\n}\r\n\r\nexport const getPromptPage = (params) =>\r\n  request.get('/admin/prompt-template/page', { params })\r\n\r\nexport const addPrompt = (data) =>\r\n  request.post('/admin/prompt-template', data)\r\n\r\nexport const updatePrompt = (data) =>\r\n  request.put('/admin/prompt-template', data)\r\n\r\nexport const deletePrompts = (ids) =>\r\n  request.delete('/admin/prompt-template', {\r\n    params: { ids },\r\n    paramsSerializer: { indexes: null }\r\n  })\r\n\r\nexport const getPromptDetail = (id) =>\r\n  request.get(`/admin/prompt-template/${id}`)"],"names":["handleSetSystemModel","async","ElMessageBox","confirm","row","systemFlag","confirmButtonText","cancelButtonText","type","data","setSystemModel","id","code","ElMessage","success","fetchModels","error","response","message","pagination","reactive","page","size","total","modelList","ref","loading","selectedIds","dialog","visible","title","isEdit","formData","modelName","baseUrl","apiKey","value","getModelPage","pageNo","pageSize","records","handleSelectionChange","selection","map","item","handleDelete","deleteModels","batchDelete","length","warning","openCreateDialog","Object","assign","openEditDialog","getModelDetail","submitForm","res","updateModel","createModel","onMounted","__exports__","params","request","url","method","ids","delete","paramsSerializer","indexes","modelId","getPromptPage","get","addPrompt","post","updatePrompt","put","deletePrompts","getPromptDetail"],"sourceRoot":""}