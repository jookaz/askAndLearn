{"version":3,"file":"js/973.b6c44290.js","mappings":"ifAEO,MAAMA,EAAsBC,IAC1BC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,0BAA0BF,IAC/BG,OAAQ,QAICC,EAAiBA,CAACC,EAAYC,EAAUC,EAAQP,EAAUQ,EAAWC,KACzER,EAAAA,EAAAA,GAAQ,CACbC,IAAK,6BACLC,OAAQ,OACRO,KAAM,CACJL,aACAC,WACAC,SACAP,WACAQ,YACAC,cAEFE,QAAS,MAiBAC,EAAWA,CAACF,EAAMG,KACtBZ,EAAAA,EAAAA,GAAQ,CACbC,IAAK,uBACLC,OAAQ,OACRO,UACGG,IAIMC,EAAcC,IAClBd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,8BACLC,OAAQ,OACRQ,QAAS,IACTD,KAAMK,IAIGC,EAAmBA,CAACC,EAAIC,KAC5BjB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,8BACLC,OAAQ,MACRO,KAAM,CACJO,KACAE,aAAcD,KAMPE,EAAaA,KACjBnB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,cACLC,OAAQ,QAICkB,EAAkBC,IACtBrB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,eAAeoB,IACpBnB,OAAQ,QAICoB,EAAoBR,IACxBd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,4BACLC,OAAQ,MACRY,WAIG,SAASS,EAAmBf,EAAYgB,GAC7C,OAAOxB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,+BACLC,OAAQ,MACRY,OAAQ,CAAEN,aAAYgB,WAE1B,CAEO,SAASC,EAAsBjB,GACpC,OAAOR,EAAAA,EAAAA,GAAQ,CACbC,IAAK,8BACLC,OAAQ,MACRY,OAAQ,CAAEN,eAEd,CAEO,MAAMkB,EAA0BA,CAACC,EAAUH,KACzCxB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,mCACLC,OAAQ,MACRY,OAAQ,CAAEa,WAAUH,YAIXI,EAAiCA,CAACC,EAAiBL,KACvDxB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,0CACLC,OAAQ,MACRY,OAAQ,CAAEe,kBAAiBL,YAIlBM,EAA6BA,CAACC,EAAoBP,KACtDxB,EAAAA,EAAAA,GAAQ,CACbC,IAAK,sCACLC,OAAQ,MACRY,OAAQ,CAAEiB,qBAAoBP,YAIrBQ,EAA0BvB,IAC9BT,EAAAA,EAAAA,GAAQ,CACbC,IAAK,kCACLC,OAAQ,OACRO,SAISwB,EAAuBxB,IAC3BT,EAAAA,EAAAA,GAAQ,CACbC,IAAK,+BACLC,OAAQ,MACRO,Q,yRCrGJ,MAAMyB,GAAUC,EAAAA,EAAAA,IAAI,IACdC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAcF,EAAAA,EAAAA,IAAI,MAClBG,GAAiBH,EAAAA,EAAAA,KAAI,GAErBI,EAAeC,UACnB,IACEF,EAAeG,OAAQ,EACvB,MAAMC,QAAYvB,EAAAA,EAAAA,MAClBe,EAAQO,MAAQC,EAAIjC,MAAQ,EAC9B,CAAE,MAAOkC,GACPC,EAAAA,GAAUD,MAAM,aAAeA,EAAME,QACvC,CAAE,QACAP,EAAeG,OAAQ,CACzB,GAGIK,EAAmBN,UACvB,IACEH,EAAYI,MAAQpB,EACpB,MAAMqB,QAAYtB,EAAAA,EAAAA,GAAeC,GACjCe,EAASK,OAASC,EAAIjC,MAAQ,IAAIsC,KAAIC,IAAQ,CAC5CC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdC,WAAW,IAAIC,MAAOC,iBAE1B,CAAE,MAAOV,GACPC,EAAAA,GAAUD,MAAM,aAAeA,EAAME,QACvC,GAGIS,EAAcH,GACX,IAAIC,KAAKD,GAAWI,iB,2tCCnE7B,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://teacher-ai/./src/api/askyou.js","webpack://teacher-ai/./src/views/QASelfView.vue","webpack://teacher-ai/./src/views/QASelfView.vue?327f"],"sourcesContent":["import request from '@/utils/request'\r\n\r\nexport const getAvailableModels = (courseId) => {\r\n  return request({\r\n    url: `/student/youAsk/models/${courseId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport const multiModelChat = (modelNames, question, userId, courseId, chapterId, questionId) => {\r\n  return request({\r\n    url: '/student/youAsk/chat/multi',\r\n    method: 'post',\r\n    data: {\r\n      modelNames,\r\n      question,\r\n      userId,\r\n      courseId, \r\n      chapterId,\r\n      questionId // 添加questionId参数\r\n    },\r\n    timeout: 60000\r\n  })\r\n}\r\n\r\nexport const streamMultiModelChat = (modelNames, prompt) => {\r\n  return request({\r\n    url: '/student/youAsk/chat/multi',\r\n    method: 'post',\r\n    data: { modelNames, prompt },\r\n    responseType: 'text',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'text/event-stream'\r\n    }\r\n  })\r\n};\r\n\r\nexport const postChat = (data, config) => {\r\n  return request({\r\n    url: '/student/youAsk/chat',\r\n    method: 'post',\r\n    data,\r\n    ...config  // 合并额外配置\r\n  })\r\n}\r\n\r\nexport const chatAnswer = (params) => {\r\n  return request({\r\n    url: '/student/youAsk/chat/answer',\r\n    method: 'post',\r\n    timeout: 60000,\r\n    data: params\r\n  })\r\n}\r\n\r\nexport const updateModelScore = (id, score) => {\r\n  return request({\r\n    url: '/student/modelsAnswer/score',\r\n    method: 'put',\r\n    data: {\r\n      id,\r\n      studentScore: score\r\n    }\r\n  })\r\n}\r\n\r\n// 添加以下接口定义\r\nexport const getChatIds = () => {\r\n  return request({\r\n    url: '/ai/history',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport const getChatHistory = (chatId) => {\r\n  return request({\r\n    url: `/ai/history/${chatId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport const listAllQuestions = (params) => {\r\n  return request({\r\n    url: '/student/question/listAll',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport function updateQuestionLike(questionId, isLike) {\r\n  return request({\r\n    url: '/student/question/updateLike',\r\n    method: 'put',\r\n    params: { questionId, isLike }\r\n  })\r\n}\r\n\r\nexport function getQuestionAllAnswers(questionId) {\r\n  return request({\r\n    url: '/student/question/allAnswer',\r\n    method: 'get',\r\n    params: { questionId }\r\n  })\r\n}\r\n\r\nexport const updateStudentAnswerLike = (answerId, isLike) => {\r\n  return request({\r\n    url: 'student/studentAnswer/updateLike',\r\n    method: 'put',\r\n    params: { answerId, isLike }\r\n  })\r\n}\r\n\r\nexport const updateStudentImproveAnswerLike = (improveAnswerId, isLike) => {\r\n  return request({\r\n    url: 'student/studentImproveAnswer/updateLike',\r\n    method: 'put',\r\n    params: { improveAnswerId, isLike }\r\n  })\r\n}\r\n\r\nexport const updateStudentAnswerAllLike = (studentAnswerAllId, isLike) => {\r\n  return request({\r\n    url: 'student/studentAnswerAll/updateLike',\r\n    method: 'put',\r\n    params: { studentAnswerAllId, isLike }\r\n  })\r\n}\r\n\r\nexport const createStudentAnswerAll = (data) => {\r\n  return request({\r\n    url: 'student/studentAnswerAll/create',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport const updateStudentReason = (data) => {\r\n  return request({\r\n    url: '/student/modelsAnswer/reason',\r\n    method: 'put',\r\n    data\r\n  })\r\n}","<template>\r\n  <div class=\"qa-container\">\r\n    <el-card class=\"operation-card\">\r\n      <el-button \r\n        type=\"primary\" \r\n        @click=\"fetchChatIds\" \r\n        :loading=\"loadingChatIds\"\r\n      >\r\n        <el-icon><Refresh /></el-icon>\r\n        获取会话历史\r\n      </el-button>\r\n    </el-card>\r\n\r\n    <el-card class=\"chat-list\" v-if=\"chatIds.length > 0\">\r\n      <div class=\"chat-item\" v-for=\"chatId in chatIds\" :key=\"chatId\">\r\n        <el-button \r\n          type=\"text\" \r\n          @click=\"fetchChatHistory(chatId)\"\r\n        >\r\n          {{ chatId }}\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n\r\n    <el-card class=\"history-card\" v-if=\"currentChat\">\r\n      <div class=\"message-item\" v-for=\"(msg, index) in messages\" :key=\"index\">\r\n        <div class=\"message-header\">\r\n          <el-tag type=\"info\" size=\"small\">{{ msg.role }}</el-tag>\r\n          <span class=\"timestamp\">{{ formatTime(msg.timestamp) }}</span>\r\n        </div>\r\n        <div class=\"message-content\">{{ msg.content }}</div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getChatIds, getChatHistory } from '@/api/askyou'\r\n\r\nconst chatIds = ref([])\r\nconst messages = ref([])\r\nconst currentChat = ref(null)\r\nconst loadingChatIds = ref(false)\r\n\r\nconst fetchChatIds = async () => {\r\n  try {\r\n    loadingChatIds.value = true\r\n    const res = await getChatIds()\r\n    chatIds.value = res.data || []\r\n  } catch (error) {\r\n    ElMessage.error('获取会话列表失败: ' + error.message)\r\n  } finally {\r\n    loadingChatIds.value = false\r\n  }\r\n}\r\n\r\nconst fetchChatHistory = async (chatId) => {\r\n  try {\r\n    currentChat.value = chatId\r\n    const res = await getChatHistory(chatId)\r\n    messages.value = (res.data || []).map(item => ({\r\n      role: item.role,\r\n      content: item.content,\r\n      timestamp: new Date().toISOString() // 如果接口没有返回时间，使用当前时间\r\n    }))\r\n  } catch (error) {\r\n    ElMessage.error('获取聊天记录失败: ' + error.message)\r\n  }\r\n}\r\n\r\nconst formatTime = (timestamp) => {\r\n  return new Date(timestamp).toLocaleString()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.qa-container {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.operation-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chat-list {\r\n  margin-bottom: 20px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-item {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.history-card {\r\n  margin-top: 20px;\r\n}\r\n\r\n.message-item {\r\n  margin: 15px 0;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.timestamp {\r\n  margin-left: 15px;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.message-content {\r\n  white-space: pre-wrap;\r\n  line-height: 1.6;\r\n}\r\n</style>","import script from \"./QASelfView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QASelfView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QASelfView.vue?vue&type=style&index=0&id=2e69941f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2e69941f\"]])\n\nexport default __exports__"],"names":["getAvailableModels","courseId","request","url","method","multiModelChat","modelNames","question","userId","chapterId","questionId","data","timeout","postChat","config","chatAnswer","params","updateModelScore","id","score","studentScore","getChatIds","getChatHistory","chatId","listAllQuestions","updateQuestionLike","isLike","getQuestionAllAnswers","updateStudentAnswerLike","answerId","updateStudentImproveAnswerLike","improveAnswerId","updateStudentAnswerAllLike","studentAnswerAllId","createStudentAnswerAll","updateStudentReason","chatIds","ref","messages","currentChat","loadingChatIds","fetchChatIds","async","value","res","error","ElMessage","message","fetchChatHistory","map","item","role","content","timestamp","Date","toISOString","formatTime","toLocaleString","__exports__"],"sourceRoot":""}