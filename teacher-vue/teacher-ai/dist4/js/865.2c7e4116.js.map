{"version":3,"file":"js/865.2c7e4116.js","mappings":"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","sources":["webpack://teacher-ai/./src/views/QuestionDetailView.vue","webpack://teacher-ai/./src/views/QuestionDetailView.vue?db3b"],"sourcesContent":["\r\n<template>\r\n  <div class=\"question-detail\">\r\n          <el-button \r\n          type=\"primary\" \r\n          @click=\"showScoreDialog = true\"\r\n          class=\"mb-4\"\r\n        >\r\n          📝 评分标准\r\n        </el-button>\r\n\r\n        <!-- 对话框包裹现有评分表单 -->\r\n        <el-dialog\r\n          v-model=\"showScoreDialog\"\r\n          title=\"评分标准\"\r\n          width=\"720px\"\r\n        >\r\n        <div class=\"markdown-container\">\r\n              <el-alert\r\n                title=\"先判断回答相关性，再根据以下标准评分\"\r\n                type=\"info\"\r\n                :closable=\"false\"\r\n                class=\"mb-4\"\r\n              />\r\n\r\n              <el-descriptions\r\n                border\r\n                :column=\"1\"\r\n                title=\"评分细则\"\r\n              >\r\n                <el-descriptions-item label=\"80-100分 | 完美回答\">\r\n                  <span class=\"text-emerald-600 font-medium\">✅ 完全准确、完整、逻辑严密</span>\r\n                  <pre class=\"example\">示例：\r\n          问题：什么是光合作用\r\n          回答：\"光合作用分为光反应和暗反应：\r\n          1. 光反应中叶绿体吸收光能分解水\r\n          2. 释放氧气并生成ATP和NADPH\r\n          3. 暗反应通过卡尔文循环固定CO₂生成葡萄糖\"</pre>\r\n                </el-descriptions-item>\r\n\r\n                <el-descriptions-item label=\"60-80分 | 优秀回答\">\r\n                  <span class=\"text-blue-600 font-medium\">✏️ 正确但简略，逻辑清晰</span>\r\n                  <pre class=\"example\">示例：\r\n          回答：\"光合作用是植物利用光能将CO₂和水\r\n          转化为葡萄糖的过程，分为光反应和暗反应\"</pre>\r\n                </el-descriptions-item>\r\n\r\n                <el-descriptions-item label=\"40-60分 | 基本正确\">\r\n                  <span class=\"text-orange-600 font-medium\">⚠️ 存在小错误/信息不完整</span>\r\n                  <pre class=\"example\">示例：\r\n          回答：\"光合作用是植物制造食物的过程\r\n          需要阳光、水和二氧化碳，产生氧气\"</pre>\r\n                </el-descriptions-item>\r\n\r\n                <el-descriptions-item label=\"20-40分 | 部分错误\">\r\n                  <span class=\"text-rose-600 font-medium\">❌ 明显错误/偏离主题</span>\r\n                  <pre class=\"example\">示例：\r\n          回答：\"光合作用就是植物吸收阳光\r\n          然后产生能量供自己使用\"</pre>\r\n                </el-descriptions-item>\r\n\r\n                <el-descriptions-item label=\"1-20分 | 完全错误\">\r\n                  <span class=\"text-red-700 font-medium\">⛔ 无关/无法理解</span>\r\n                  <pre class=\"example\">示例：\r\n          回答：\"光合作用是动物消化食物的方式\"</pre>\r\n                </el-descriptions-item>\r\n              </el-descriptions>\r\n\r\n     \r\n            </div>\r\n        </el-dialog>\r\n    <el-card class=\"dialog-container\">\r\n      <!-- 学生问题 -->\r\n      <div class=\"message student\">\r\n        <div class=\"avatar\">👤</div>\r\n        <div class=\"bubble\">\r\n          <h3>学生提问</h3>\r\n          <p>{{ questionContent }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 学生答案 -->\r\n      <div class=\"message answer\">\r\n        <div class=\"avatar\">📝</div>\r\n        <div class=\"bubble\">\r\n          <h3>学生答案</h3>\r\n          <pre>{{ answerContent }}</pre>\r\n          \r\n          <!-- 新增评分表单 -->\r\n          <el-form \r\n            :model=\"scoreForm\" \r\n            :rules=\"scoreRules\"\r\n            @submit.prevent=\"submitScore\"\r\n          >\r\n            <el-form-item label=\"请输入评分（1-100）\" prop=\"score\">\r\n              <el-input-number \r\n                v-model=\"scoreForm.score\"\r\n                :min=\"1\"\r\n                :max=\"100\"\r\n                :placeholder=\"scoreForm.submittedScore ? '已提交评分：' + scoreForm.submittedScore : '请输入评分'\"\r\n                controls-position=\"right\"\r\n              ></el-input-number>\r\n            </el-form-item>\r\n            \r\n            <el-button \r\n              type=\"primary\" \r\n              native-type=\"submit\"\r\n              :loading=\"submitting\"\r\n            >\r\n              提交评分\r\n            </el-button>\r\n          </el-form>\r\n\r\n          <!-- 新增对话面板 -->\r\n          <el-collapse v-model=\"activeCollapse\">\r\n            <el-collapse-item name=\"chat\" :disabled=\"!scoreSubmitted\">\r\n              <template #title>\r\n                <span class=\"chat-title\">💬 改进该学生的答案</span>\r\n              </template>\r\n              <div class=\"chat-container\">\r\n                <!-- 消息展示区 -->\r\n                <div class=\"chat-messages\">\r\n                  <div \r\n                    v-for=\"(msg, index) in chatHistory\" \r\n                    :key=\"index\"\r\n                    :class=\"['message', msg.role]\"\r\n                  >\r\n                    <div class=\"role-icon\">{{ msg.role === 'user' ? '👤' : '🤖' }}</div>\r\n                    <div class=\"content\">{{ msg.content }}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- 输入区 -->\r\n                <div class=\"chat-input\" v-if=\"!showCompletion\">\r\n                  <el-input \r\n                    v-model=\"userInput\"\r\n                    placeholder=\"输入您的回答...\"\r\n                    clearable\r\n                    type=\"textarea\"\r\n                    :rows=\"3\"\r\n                    :autosize=\"{ minRows: 3, maxRows: 6 }\"\r\n                    @keyup.enter=\"handleKeydown\"\r\n                  />\r\n                  <el-button \r\n                    type=\"primary\" \r\n                    @click=\"handleSend\"\r\n                    :loading=\"isSending\"\r\n                    style=\"margin-top: 10px;\"\r\n                  >\r\n                    发送\r\n                  </el-button>\r\n                </div>\r\n                <!-- 修改完成提示结构 -->\r\n                <template v-if=\"showReasonInput\">\r\n                  <el-alert\r\n                    title=\"请说明回答理由\"\r\n                    type=\"warning\"\r\n                    :closable=\"false\"\r\n                    class=\"mb-4\"\r\n                  >\r\n                    <el-form :model=\"reasonForm\" :rules=\"reasonRules\">\r\n                      <el-form-item label=\"回答理由\" prop=\"studentReason\" class=\"reason-input\">\r\n                        <el-input\r\n                          v-model=\"reasonForm.studentReason\"\r\n                          type=\"textarea\"\r\n                          :rows=\"4\"\r\n                          :autosize=\"{ minRows: 4, maxRows: 8 }\"\r\n                          placeholder=\"请详细说明您给出此回答的理由\"\r\n                          style=\"width: 600px;\"\r\n                        />\r\n                      </el-form-item>\r\n                      <el-button \r\n                        type=\"primary\"\r\n                        @click=\"submitReason\"\r\n                        :disabled=\"!reasonForm.studentReason.trim()\"\r\n                      >\r\n                        提交理由\r\n                      </el-button>\r\n                    </el-form>\r\n                  </el-alert>\r\n                </template>\r\n                <div v-if=\"showCompletion\" class=\"completion-alert\">\r\n                    <el-alert\r\n                      title=\"🎉 任务完成\"\r\n                      type=\"success\"\r\n                      description=\"恭喜您完成本章节的他问你答！可返回课程列表继续学习其他章节。\"\r\n                      :closable=\"false\"\r\n                    >\r\n                      <template #extra>\r\n                        <el-button \r\n                          type=\"primary\" \r\n                          @click=\"$router.push({ name: 'courses' })\"\r\n                          class=\"back-btn\"\r\n                        >\r\n                          返回课程列表\r\n                        </el-button>\r\n                      </template>\r\n                    </el-alert>\r\n                </div>\r\n              </div>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive} from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport axios from '@/utils/request'\r\nimport { ElMessage,ElMessageBox} from 'element-plus'\r\nimport { updateProgressStatus } from '@/api/progress'  // 新增进度接口导入\r\nimport { useStore } from 'vuex'\r\nconst chatHistory = ref([]) // 新增chatHistory声明\r\nconst showScoreDialog = ref(false);\r\n\r\n// 合并所有状态声明\r\nconst activeCollapse = ref([])\r\nconst scoreSubmitted = ref(false)\r\nconst userInput = ref('')\r\nconst isSending = ref(false)\r\n\r\nconst route = useRoute()\r\nconst questionContent = ref('')\r\nconst answerContent = ref('')\r\nconst answerId = ref(null)\r\nconst showReasonInput = ref(false) // 新增理由输入状态\r\nconst showCompletion = ref(false) // 保留原完成状态\r\n\r\n// 新增理由表单数据\r\nconst reasonForm = reactive({\r\n  studentReason: '',\r\n  answerId: null\r\n})\r\n// 新增键盘事件处理方法\r\nconst handleKeydown = (e) => {\r\n  if (e.shiftKey && e.key === 'Enter') {\r\n    // Shift+Enter 允许换行\r\n    return true\r\n  } else if (e.key === 'Enter') {\r\n    // 单独Enter触发发送\r\n    e.preventDefault()\r\n    handleSend()\r\n  }\r\n}\r\nonMounted(async () => {\r\n  try {\r\n    const questionId = Number(route.params.questionId)\r\n    const res = await axios.get('/student/question/detail', {\r\n      params: { questionId }\r\n    })\r\n    questionContent.value = res.data.data.questionContent\r\n    answerContent.value = res.data.data.answerContent\r\n    answerId.value = res.data.data.answerId // 新增此行存储answerId\r\n    console.log('获取到回答ID:', answerId.value) // 调试日志\r\n  } catch (error) {\r\n    console.error('获取问题详情失败:', error)\r\n  }\r\n})\r\n\r\n// 修改后的响应式数据\r\nconst scoreForm = reactive({\r\n  score: null,\r\n  submittedScore: null // 新增已提交评分状态\r\n})\r\n\r\n// 修改后的提交方法\r\nconst submitScore = async () => {\r\n  try {\r\n    submitting.value = true\r\n    const res = await axios.put('/student/studentAnswer', {\r\n      answerId: answerId.value,\r\n      anotherStudentScore: scoreForm.score\r\n    })\r\n    \r\n    if (res.data?.code === 1) {\r\n      ElMessage.success('评分提交成功')\r\n      scoreForm.submittedScore = scoreForm.score // 存储已提交评分\r\n      scoreForm.score = null // 清空当前输入值\r\n      scoreSubmitted.value = true\r\n      activeCollapse.value = ['chat']\r\n    }\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 在模板中添加placeholder\r\nconst submitting = ref(false)\r\nconst scoreRules = {\r\n  score: [\r\n    { required: true, message: '请输入评分', trigger: 'blur' },\r\n    { type: 'number', min: 1, max: 100, message: '评分范围1-100', trigger: ['blur', 'change'] }\r\n  ]\r\n}\r\nconst reasonRules = {\r\n  studentReason: [\r\n    { required: true, message: '必须输入回答理由', trigger: 'blur' },\r\n    { min: 1, message: '理由不可以为空', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n\r\n\r\n// 在setup部分获取store实例\r\nconst store = useStore()\r\n\r\n// 修改后的接口参数获取方式\r\nconst handleSend = async () => {\r\n  try {\r\n    if (!userInput.value.trim()) return\r\n    isSending.value = true\r\n    \r\n    // 添加用户消息\r\n    chatHistory.value.push({\r\n      role: 'user',\r\n      content: userInput.value\r\n    })\r\n    \r\n    const res = await axios.post('/student/someoneAsk/chat/improveAnswer', {\r\n      prompt: userInput.value,\r\n      userId: Number(localStorage.getItem('student-id')),\r\n      courseId: store.getters['chapter/getCurrentChapterParams'].courseId,\r\n      chapterId: store.getters['chapter/getCurrentChapterParams'].chapterId,\r\n      questionId: Number(route.params.questionId),\r\n      question:questionContent.value\r\n    }, {\r\n      timeout: 300000\r\n    })\r\n    if (res.data?.code === 1){\r\n    // 添加AI响应\r\n        \r\n         chatHistory.value.push({\r\n          role: 'assistant',\r\n          content: res.data.data.response\r\n        })\r\n\r\n        // 新增flag判断逻辑\r\n        if (res.data.data.flag) {\r\n          reasonForm.answerId = res.data.data.id // 存储返回的answerId\r\n          showReasonInput.value = true // 改为显示理由输入\r\n          await axios.put('/student/question/updateIfSelect', null, {\r\n            params: {\r\n              questionId: Number(route.params.questionId)\r\n            }\r\n          })\r\n          showCompletion.value = true\r\n          \r\n          // 修复参数获取方式\r\n          await updateProgressStatus({\r\n            userId: Number(localStorage.getItem('student-id')),  // 从路由参数获取\r\n            courseId: store.getters['chapter/getCurrentChapterParams'].courseId,\r\n            chapterId: store.getters['chapter/getCurrentChapterParams'].chapterId,\r\n            step: 3\r\n          })\r\n          \r\n          // 进度更新提示\r\n          ElMessage.success('进度已更新')\r\n        }\r\n        \r\n        userInput.value = ''\r\n    }else{\r\n        ElMessageBox.confirm(\r\n          '大模型服务连接异常，错误信息: ' + (res.data?.message || '未知错误') + '，请刷新页面重试',\r\n          '服务不可用',\r\n          {\r\n            confirmButtonText: '立即刷新',\r\n            cancelButtonText: '取消',\r\n            type: 'error'\r\n          }\r\n          ).then(() => {\r\n            location.reload()\r\n          })\r\n      }\r\n    \r\n  } catch (error) {\r\n    ElMessage.error('请求失败: ' + error.message)\r\n  } finally {\r\n    isSending.value = false\r\n  }\r\n}\r\nconst submitReason = async () => {\r\n  try {\r\n    const res = await axios.put('/student/studentImproveAnswer/reason', {\r\n      answerId: reasonForm.answerId,\r\n      studentReason: reasonForm.studentReason\r\n    })\r\n    \r\n    if (res.data?.code === 1) {\r\n      ElMessage.success('理由提交成功')\r\n      showReasonInput.value = false\r\n      showCompletion.value = true // 最后显示完成提示\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('提交失败: ' + error.message)\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.reason-input .el-textarea__inner {\r\n  min-width: 600px;\r\n  max-width: 800px;\r\n}\r\n.markdown-container {\r\n  padding: 0 12px;\r\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\n:deep(.el-descriptions__title) {\r\n  font-size: 16px;\r\n  color: #409eff;\r\n}\r\n\r\n.example {\r\n  background: #f8f9fa;\r\n  padding: 12px;\r\n  border-left: 4px solid #e5e7eb;\r\n  margin: 8px 0;\r\n  border-radius: 4px;\r\n  color: #4b5563;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n}\r\n.dialog-container {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin: 20px 0;\r\n}\r\n\r\n.student {\r\n  flex-direction: row;\r\n}\r\n\r\n.answer {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.avatar {\r\n  font-size: 24px;\r\n  margin: 0 15px;\r\n}\r\n\r\n.bubble {\r\n  flex: 1;\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  background: #f0f4ff;\r\n  position: relative;\r\n}\r\n\r\n.bubble h3 {\r\n  color: #409eff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  line-height: 1.6;\r\n  background: rgba(255,255,255,0.8);\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n}\r\n\r\n/* 新增评分表单样式 */\r\n.el-form {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.el-input-number {\r\n  width: 200px;\r\n}\r\n\r\n/* 新增对话样式 */\r\n.chat-title {\r\n  font-size: 16px;\r\n  color: #409eff;\r\n}\r\n\r\n.chat-container {\r\n  margin-top: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n}\r\n\r\n.chat-messages {\r\n  min-height: 300px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n  background: #f8f9fa;\r\n  border-radius: 6px;\r\n}\r\n\r\n.message .content {\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n  padding: 8px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.message.user {\r\n  background: #f5f7fa;\r\n}\r\n\r\n.message.assistant {\r\n  background: #f0f9eb;\r\n}\r\n\r\n.role-icon {\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\r\n","import script from \"./QuestionDetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QuestionDetailView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QuestionDetailView.vue?vue&type=style&index=0&id=2bca4155&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2bca4155\"]])\n\nexport default __exports__"],"names":["chatHistory","ref","showScoreDialog","activeCollapse","scoreSubmitted","userInput","isSending","route","useRoute","questionContent","answerContent","answerId","showReasonInput","showCompletion","reasonForm","reactive","studentReason","handleKeydown","e","shiftKey","key","preventDefault","handleSend","onMounted","async","questionId","Number","params","res","axios","get","value","data","console","log","error","scoreForm","score","submittedScore","submitScore","submitting","put","anotherStudentScore","code","ElMessage","success","scoreRules","required","message","trigger","type","min","max","reasonRules","store","useStore","trim","push","role","content","post","prompt","userId","localStorage","getItem","courseId","getters","chapterId","question","timeout","response","flag","id","updateProgressStatus","step","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","location","reload","submitReason","__exports__"],"sourceRoot":""}